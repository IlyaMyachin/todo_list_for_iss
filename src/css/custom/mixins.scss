@mixin noselect{
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
  -khtml-user-select: none; /* Konqueror HTML */
  -moz-user-select: none; /* Old versions of Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none; /* Non-prefixed version, currently supported by Chrome, Edge, Opera and Firefox */
}

@mixin border($border: 1px solid $border, $position: all) {
  @if($position == top){
    border-top: $border;
  } @else if($position == right){
    border-right: $border;
  } @else if($position == bottom){
    border-bottom: $border;
  } @else if($position == left){
    border-left: $border;
  } @else {
    border: $border;
  }
}

@mixin round($radius: $radius, $position: all) {
  @if($position == top-left){
    border-top-left-radius: $radius;
    -moz-border-radius-topleft: $radius;
    -webkit-border-top-left-radius: $radius;
  } @else if($position == top-right){
    border-top-right-radius: $radius;
    -moz-border-radius-topright: $radius;
    -webkit-border-top-right-radius: $radius;
  } @else if($position == bottom-left){
    border-bottom-left-radius: $radius;
    -moz-border-radius-bottomleft: $radius;
    -webkit-border-bottom-left-radius: $radius;
  } @else if($position == bottom-right){
    border-bottom-right-radius: $radius;
    -moz-border-radius-bottomright: $radius;
    -webkit-border-bottom-right-radius: $radius;
  } @else {
    border-radius: $radius;
    -moz-border-radius: $radius;
    -webkit-border-radius: $radius;
  }
}

@mixin boxShadow($size: 4px) {
  box-shadow: 0 $size $size * 2 0 rgba(0, 0, 0, 0.2);
}

@mixin lineClamp($lines: 1){
  //min-height: 1em * $lines;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
}

@mixin nowrap(){
  white-space: nowrap;
  flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
}

@mixin boxSizing($value: content-box){
  box-sizing: $value;
  -moz-box-sizing: $value;
  -webkit-box-sizing: $value;
}

@mixin breakWord(){
  word-wrap: break-word;
  overflow-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-word;
}

@mixin preWrap(){
  white-space: pre-wrap;       /* css-3 */
  white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
  white-space: -pre-wrap;      /* Opera 4-6 */
  white-space: -o-pre-wrap;    /* Opera 7 */
}

@mixin context(){
  @include round;

  background: $scheme-main;
  padding: $size-4;
}
